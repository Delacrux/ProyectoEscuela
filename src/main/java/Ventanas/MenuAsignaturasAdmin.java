package Ventanas;
import javax.swing.*;
import com.mycompany.proyectoescuela.*;
import java.awt.*;
import java.util.*;

public class MenuAsignaturasAdmin extends javax.swing.JFrame {
    
    private Curso curso;
    private Controlador control;
    
    public MenuAsignaturasAdmin(Controlador control, Curso curso) {
        this.control = control;
        this.curso = curso;
        initComponents();
        mostrarPanelAsignaturas();
        mostrarPanelAlumnos();
        
    }
    
    public void mostrarPanelAsignaturas(){
        DefaultListModel<String> modelo = new DefaultListModel<>();
        for (String a : curso.getRecursosPorAsignatura().keySet()) {
            System.out.println(a);
            modelo.addElement(a);
        }

        listaAsignaturas.setModel(modelo);
        listaAsignaturas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    }
    
    public void mostrarPanelAlumnos(){
        DefaultListModel<String> modelo = new DefaultListModel<>();
        for (Alumno a : curso.getListaAlumnos()) {
          
            modelo.addElement(a.getNombreApellido());
        }

        listaAlumnos.setModel(modelo);
        listaAlumnos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tituloAsignaturas = new javax.swing.JLabel();
        tituloAlumnos = new javax.swing.JLabel();
        botonAgregarAsig = new javax.swing.JButton();
        botonAgregarAlum = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaAsignaturas = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaAlumnos = new javax.swing.JList<>();
        botonEliminarAsig = new javax.swing.JButton();
        botonEliminarAlum = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tituloAsignaturas.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 24)); // NOI18N
        tituloAsignaturas.setText("ASIGNATURAS");

        tituloAlumnos.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 24)); // NOI18N
        tituloAlumnos.setText("ALUMNOS");

        botonAgregarAsig.setBackground(new java.awt.Color(0, 102, 0));
        botonAgregarAsig.setText("Agregar");
        botonAgregarAsig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarAsigActionPerformed(evt);
            }
        });

        botonAgregarAlum.setBackground(new java.awt.Color(0, 102, 0));
        botonAgregarAlum.setText("Agregar");
        botonAgregarAlum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarAlumActionPerformed(evt);
            }
        });

        listaAsignaturas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listaAsignaturas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaAsignaturasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaAsignaturas);

        listaAlumnos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listaAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaAlumnosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listaAlumnos);

        botonEliminarAsig.setBackground(new java.awt.Color(102, 0, 0));
        botonEliminarAsig.setText("Eliminar");
        botonEliminarAsig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarAsigActionPerformed(evt);
            }
        });

        botonEliminarAlum.setBackground(new java.awt.Color(102, 0, 0));
        botonEliminarAlum.setText("Eliminar");
        botonEliminarAlum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarAlumActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonAgregarAsig)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonEliminarAsig))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(tituloAsignaturas)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonAgregarAlum)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonEliminarAlum)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                        .addComponent(tituloAlumnos)
                        .addGap(112, 112, 112))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tituloAsignaturas)
                    .addComponent(tituloAlumnos))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botonAgregarAlum)
                        .addComponent(botonEliminarAlum))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botonAgregarAsig)
                        .addComponent(botonEliminarAsig)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAgregarAsigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarAsigActionPerformed
        JTextField campoAsignatura = new JTextField();

        int resultado = JOptionPane.showConfirmDialog(
            this,
            campoAsignatura,
            "Ingrese el nombre de la asignatura",
            JOptionPane.OK_CANCEL_OPTION
        );

        if (resultado == JOptionPane.OK_OPTION) {
            String nuevaAsignatura = campoAsignatura.getText();
            try{
                curso.agregarAsignatura(nuevaAsignatura);
            }
            catch(AsignaturaException e){
                JOptionPane.showMessageDialog(this, "Error al agregar asignatura: " + e);
            }

        }
    }//GEN-LAST:event_botonAgregarAsigActionPerformed

    private void botonAgregarAlumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarAlumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonAgregarAlumActionPerformed

    private void listaAsignaturasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaAsignaturasMouseClicked
         listaAsignaturas.addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                String asignatura = listaAsignaturas.getSelectedValue();
                ArrayList<RecursoDigital> recursos = curso.getRecursosPorAsignatura().get(asignatura);
                control.mostrarRecursosProfesor(asignatura, recursos);
            }
        });
    }//GEN-LAST:event_listaAsignaturasMouseClicked

    private void botonEliminarAsigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarAsigActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonEliminarAsigActionPerformed

    private void botonEliminarAlumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarAlumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonEliminarAlumActionPerformed

    private void listaAlumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaAlumnosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_listaAlumnosMouseClicked

    /**
     * @param args the command line arguments
     */
    
    public static void main(String[] args) {
    // Crear profesor
    Profesor prof = new Profesor(
        "12345678-9",
        "Israel González",
        "Matemáticas",
        "israel@colegio.cl",
        "+56912345678"
    );

    // Crear curso
    Curso curso = new Curso(prof, "4to Medio A");
    curso.setProfesorJefe(prof);

    // Agregar asignaturas
    try {
        curso.agregarAsignatura("Matemáticas");
        curso.agregarAsignatura("Física");
    } catch (AsignaturaException e) {
        e.printStackTrace();
    }

    // Agregar recursos digitales
    try {
        curso.agregarRecursoDigital("Matemáticas", new RecursoDigital(
            "Guía Álgebra",
            "https://recursos.edu/matematicas/algebra.pdf",
            "Ejercicios de factorización"
        ));
        curso.agregarRecursoDigital("Física", new RecursoDigital(
            "Simulador Movimiento",
            "https://simuladores.edu/fisica/movimiento",
            "Simula trayectorias y aceleración"
        ));
    } catch (AsignaturaException e) {
        e.printStackTrace();
    }

    // Agregar alumnos
    curso.getListaAlumnos().add(new Alumno("11111111-1", "Ana Torres", "ana@correo.cl", "+56911111111", null));
    curso.getListaAlumnos().add(new Alumno("22222222-2", "Luis Pérez", "luis@correo.cl", "+56922222222", null));

    // Asociar asignaturas al profesor
    ArrayList<String> asignaturas = new ArrayList<>();
    asignaturas.add("Matemáticas");
    asignaturas.add("Física");
    prof.getAsignaturasPorCurso().put(curso, asignaturas);

    // Crear controlador de prueba
    Controlador control = new Controlador() {
        @Override
        public void mostrarRecursosAlumno(String nombre, ArrayList<RecursoDigital> recursos) {
            System.out.println("Asignatura seleccionada: " + nombre);
            for (RecursoDigital r : recursos) {
                System.out.println("- " + r.getTituloMaterial() + " (" + r.getUrl() + ")");
            }
        }
    };

    // Lanzar ventana
    SwingUtilities.invokeLater(() -> {
        new MenuAsignaturasAdmin(control, prof, curso).setVisible(true);
    });
}



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregarAlum;
    private javax.swing.JButton botonAgregarAsig;
    private javax.swing.JButton botonEliminarAlum;
    private javax.swing.JButton botonEliminarAsig;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listaAlumnos;
    private javax.swing.JList<String> listaAsignaturas;
    private javax.swing.JLabel tituloAlumnos;
    private javax.swing.JLabel tituloAsignaturas;
    // End of variables declaration//GEN-END:variables
}
